example ZZ {
    let ZZ : Ring
    write X := Spec(ZZ)
    assume
        irreducible(X),
        locally_noetherian(X),
        excellent(X),
        reduced(X),
        regular(X),
        integral(X),
        affine(X),
        cohen_macaulay(X),
        noetherian(X)
}

example QQ {
    let QQ : Ring
    write X := Spec(QQ)
    assume
        qcompact(X),
        cohen_macaulay(X),
        integral(X),
        excellent(X),
        noetherian(X),
        connected(top(X)),
        regular(X),
        locally_noetherian(X),
        qseparated(X),
        separated(X)
}

example affine_line_over_QQ {
    let QQ_x : Ring
    write X := Spec(QQ_x)
}


example infinite_union_of_Spec_QQ {
    let X : Scheme
    assume 
            ~irreducible(X),
            ~connected(top(X)),
            normal(X),
            separated(X),
            regular(X),
            locally_noetherian(X),
            ~qcompact(X),
            ~noetherian(X),
            cohen_macaulay(X),
            ~affine(X),
            ~integral(X),
            excellent(X),
            reduced(X)
}

example infinitely_blown_up_plane {
    let X : Scheme
    assume 
        ~noetherian(X),
        ~affine(X),
        integral(X),
        regular(X),
        ~qcompact(X),
        normal(X),
        connected(top(X)),
        cohen_macaulay(X),
        irreducible(X),
        separated(X),
        locally_noetherian(X),
        reduced(X)
}
 
example affine_line_with_infinitely_many_origins {
    let X : Scheme
    assume
        ~separated(X),
        ~noetherian(X),
        integral(X),
        ~qcompact(X),
        ~affine(X),
        normal(X),
        connected(top(X)),
        locally_noetherian(X),
        cohen_macaulay(X),
        qseparated(X)
}

example projective_line_over_QQ {
    let X : Scheme
    assume
        irreducible(X),
        noetherian(X),
        regular(X),
        excellent(X),
        integral(X),
        ~affine(X),
        qcompact(X),
        cohen_macaulay(X),
        qseparated(X)
}


