import "/Users/jessevogel/Projects/abstract-nonsense/math/AG.txt"

theorem finite_imp_proper { use X, Y : Scheme let f : X -> Y with finite(f) then proper(f) }
theorem comp_proper { use X, Y, Z : Scheme let f : X -> Y, g : Y -> Z with proper(f), proper(g) then proper(g.f) }


# Example

let U, V, W : Scheme

let s : U -> V
let t : V -> W

assume finite(s)
assume finite(t)

prove proper(t.s)