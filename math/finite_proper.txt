# Theory
let Sch : Cat

property proper { use X, Y : Sch let f : X -> Y }
property finite { use X, Y : Sch let f : X -> Y }

theorem finite_imp_proper { use X, Y : Sch let f : X -> Y with finite(f) then proper(f) }


theorem comp_proper { use X, Y, Z : Sch let f : X -> Y, g : Y -> Z with proper(f), proper(g) then proper(g.f) }




# Example

let U, V, W : Sch

let s : U -> V
let t : V -> W

assume finite(s)
assume finite(t)

prove proper(t.s)