let Ring, Scheme : Cat


property affine { for X : Scheme }
property m_affine { use X, Y : Scheme for f : X -> Y }
property qcompact { for X : Scheme }

theorem affine_implies_qcompact {
	for X : Scheme
	with affine(X) 
	then qcompact(X)
}

theorem src_target {
	use X, Y : Scheme
	for f : X -> Y
	with m_affine(f), affine(Y)
	then affine(X)
}
