# Define rings, schemes and topological spaces
let Ring, Scheme, Top : Cat

# Define functors
let Spec : Ring ~> Scheme
let top : Scheme -> Top

# Define scheme properties
property affine { for X : Scheme }
property qcompact { for X : Scheme }
property regular { for X : Scheme }
property noetherian { for X : Scheme }
property locally_noetherian { for X : Scheme }
property integral { for X : Scheme }
property reduced { for X : Scheme }
property irreducible { for X : Scheme }
property cohen_macaulay { for X : Scheme }



property etale { use X, Y : Scheme for f : X -> Y }
property m_affine { use X, Y : Scheme for f : X -> Y }

# Define topological properties
property connected { for X : Top }

# Define theorems
theorem T0 { for X : Scheme with affine(X) then qcompact(X) }
theorem T1 { for X : Scheme with regular(X) then locally_noetherian(X) }
theorem T2 { for X : Scheme with locally_noetherian(X), qcompact(X) then noetherian(X) }
theorem T3 { for X : Scheme with noetherian(X) then locally_noetherian(X) then qcompact(X) }
theorem T4 { for X : Scheme with integral(X) then reduced(X) then irreducible(X) }
theorem T5 { for X : Scheme with reduced(X), irreducible(X) then integral(X) }
theorem T6 { for X : Scheme with regular(X) then cohen_macaulay(X) }
theorem T7 { for X : Scheme with integral(X) then connected(top(X)) }


theorem T8 {
    for X, Y : Scheme, f : X -> Y
    with m_affine(f), affine(Y)
    then affine(X)
}




let X : Scheme
assume affine(X)
prove qcompact(X)

let Y : Scheme
assume regular(Y)
assume affine(Y)
prove noetherian(Y)
