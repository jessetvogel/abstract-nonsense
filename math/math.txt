# import "/Users/jessevogel/Projects/abstract-nonsense/math/math.txt"
import "/Users/jessevogel/Projects/abstract-nonsense/math/AG-definitions.txt"
import "/Users/jessevogel/Projects/abstract-nonsense/math/AG-examples.txt"

# Define theorems
theorem T0 { let X : Scheme with affine(X) then qcompact(X) }
theorem T1 { let X : Scheme with regular(X) then locally_noetherian(X) }
theorem T2 { let X : Scheme with locally_noetherian(X), qcompact(X) then noetherian(X) }
theorem T3 { let X : Scheme with noetherian(X) then locally_noetherian(X), qcompact(X) }
theorem T4 { let X : Scheme with integral(X) then reduced(X), irreducible(X) }
theorem T5 { let X : Scheme with reduced(X), irreducible(X) then integral(X) }
theorem T6 { let X : Scheme with regular(X) then cohen_macaulay(X) }
theorem T7 { let X : Scheme with integral(X) then connected(top(X)) }

theorem T8 {
    let X, Y : Scheme, f : X -> Y
    with affine(f), affine(Y)
    then affine(X)
}

theorem T9 {
    let X, Y : Scheme, f : X -> Y
    with smooth(f), regular(Y)
    then regular(X)
}

theorem T10 {
    use X, Y : Scheme
    let f : X -> Y
    with formally_smooth(f), locally_finite_presentation(f)
    then smooth(f)
}

theorem T11 {
    use X, Y : Scheme
    let f : X -> Y
    with smooth(f)
    then formally_smooth(f), locally_finite_presentation(f)
}

theorem T12 {
    use X, Y : Scheme
    let f : X -> Y
    with locally_finite_presentation(f), qseparated(f), qcompact(f)
    then finite_presentation(f)
}

theorem T13 {
    use X, Y : Scheme
    let f : X -> Y
    with formally_etale(f), locally_finite_presentation(f)
    then etale(f)
}

theorem T14 {
    use X, Y : Scheme
    let f : X -> Y
    with etale(f)
    then formally_etale(f), locally_finite_presentation(f)
}
